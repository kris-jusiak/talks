// Copyright Louis Dionne 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <boost/hana/experimental/types.hpp>
#include <boost/hana/integral_constant.hpp>
#include <boost/hana/replace_if.hpp>
#include <boost/hana/type.hpp>
namespace hana = boost::hana;

struct is_even {
    template<int i>
    hana::bool_<i % 2 == 0> operator()(hana::basic_type<hana::int_<i>> const&) const;
};

int main() {
<% env[:k].times do |k| %>
    constexpr auto <%= "xs#{k}" %> = hana::experimental::types<
        <%= ((k*n+1)..(k*n+n)).map { |i| "hana::int_<#{i}>" }.join(', ') %>
    >{};

#if defined(METABENCH)
    constexpr auto <%= "result#{k}" %> = hana::replace_if(<%= "xs#{k}" %>, is_even{}, hana::type<void>{});
#endif
<% end %>
}
