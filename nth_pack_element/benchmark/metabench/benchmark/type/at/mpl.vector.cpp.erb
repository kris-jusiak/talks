// Copyright Louis Dionne 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

<% if n > 20 %>
    #define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
    #define BOOST_MPL_LIMIT_VECTOR_SIZE <%= ((n + 9) / 10) * 10 %>
<% end %>

#include <boost/mpl/vector.hpp>
#include <boost/mpl/at.hpp>
namespace mpl = boost::mpl;

template<int> struct x;

<% env[:k].times do |k| %>

using <%= "xs#{k}" %> = mpl::vector<
    <%= ((k*n+1)..(k*n+n)).map { |i| "x<#{i}>" }.join(', ') %>
>;

    <% (env[:p]*n/100).times do |p| %>
    #if defined(METABENCH)
    using <%= "result#{p}#{k}" %> = mpl::at_c<<%= "xs#{k}" %>, <%= p*n/env[:p] %>>::type;
    #endif
    <% end %>
<% end %>

int main() {}
