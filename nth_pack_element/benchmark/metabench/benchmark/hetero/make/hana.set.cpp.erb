// Copyright Bruno Dutra 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <boost/hana/fwd/equal.hpp>
#include <boost/hana/fwd/hash.hpp>
#include <boost/hana/set.hpp>
#include <boost/hana/type.hpp>
namespace hana = boost::hana;

template<int> struct x {};

namespace boost { namespace hana {
    template<int i, int j>
    struct equal_impl<x<i>, x<j>> {
        static constexpr hana::bool_<i == j> apply(x<i> const&, x<j> const&)
        { return {}; }
    };

    template<int i>
    struct hash_impl<x<i>> {
        static constexpr hana::type<x<i>> apply(x<i> const&) { return {}; }
    };
}} // end namespace boost::hana

int main() {
<% env[:k].times do |k| %>
#if defined(METABENCH)
    constexpr auto <%= "xs#{k}" %> = hana::make_set(<%=
        ((k*n+1)..(k*n+n)).map { |i| "x<#{i}>{}" }.join(', ')
    %>);
#endif
<% end %>
}
