#include <utility>

template <typename, std::size_t> concept prefix = true;

template <auto N>
constexpr auto nth_pack_element(auto... args) {
  return [&]<auto... Is>(std::index_sequence<Is...>) {
    return [] (prefix<Is> auto..., auto arg, auto...) {
      return arg;
    }(args...);
  }(std::make_index_sequence<N>());
}

int main() {
#if defined(METABENCH)
<% (0..n-1).each do |i| %>
    nth_pack_element<<%= i %>>(<%= (1..n).to_a.join(', ') %>);
<% end %>
#endif
}
