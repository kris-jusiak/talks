Title: Concepts Driven Design

Abstract:
Concepts are finally coming! In this talk, we will go above and beyond to explore the full potential of this haunted by history feature. We will discuss how concepts may revolutionize the way the modern C++ code is written, including how concepts may provide better diagnostics and simplify the SFINAE altogether. We will also take a look at how to emulate concepts in the current standard and discuss the benefits of the design by introspection. Additionally, it will be presented how to write a loosely coupled, well-performing code by default and how to opt out to a dynamic dispatch using type erasure when necessary. Its final focus will be on increasing your testing productivity when applying the concepts driven design.  

Outline:
- Concepts-Lite TS (C++20?)
  - type constraints (better error messages)
  - enable_if on steroids (SFINAE)

- Concepts emulation (C++11/14/17)

- Design by introspection
  - optional, type-safe interfaces

- Inject all the things (policy design)
  - static dispatch based on concepts

- Virtual Concepts
  - dynamic dispatch (type erasure) based on concepts

- Testing with concepts
  - mocking concepts (automatic mocks injection)

Bio:
Kris is a Software Engineer focusing on modern C++ development where performance (including compilation times) and quality matters. He has been crafting modern C++ in telecommunications, games and recently finance industries. Kris is an author of [Boost].DI, [Boost].SML and GUnit libraries.

https://www.meetingcpp.com/mcpp/submittalk/index.php?edit=3175fd8f8a66d7bfea827334be1945ec8bfe3f6f
